{"ast":null,"code":"import ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink, createHttpLink } from \"apollo-link-http\";\nvar token = localStorage.getItem('token');\nvar cache = new InMemoryCache();\nvar url = process.env.REACT_APP_SERVER_URL || \"https://api.lapadi.com\";\nexport var client = new ApolloClient({\n  // Provide required constructor fields\n  cache: cache,\n  link: new createHttpLink({\n    headers: {\n      authorization: token ? \"Bearer \".concat(token) : \"\"\n    },\n    uri: url\n  }),\n  // Provide some optional constructor fields\n  name: \"lapadi-app-client\",\n  version: \"1.0.1\",\n  queryDeduplication: false,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-and-network',\n      errorPolicy: 'ignore'\n    },\n    query: {\n      fetchPolicy: 'network-only',\n      errorPolicy: 'all'\n    },\n    mutate: {\n      errorPolicy: 'all'\n    }\n  }\n});","map":{"version":3,"sources":["/Users/halildogan/Desktop/hd-dev.nosync/zer/zer.archi/lib/apollo.js"],"names":["ApolloClient","InMemoryCache","ApolloLink","HttpLink","createHttpLink","token","localStorage","getItem","cache","url","process","env","REACT_APP_SERVER_URL","client","link","headers","authorization","uri","name","version","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","errorPolicy","query","mutate"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,kBAAzC;AAEA,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,IAAMC,KAAK,GAAG,IAAIP,aAAJ,EAAd;AACA,IAAMQ,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAZ,IAAoC,wBAAhD;AACA,OAAO,IAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AACnC;AACAQ,EAAAA,KAAK,EAALA,KAFmC;AAGnCM,EAAAA,IAAI,EAAE,IAAIV,cAAJ,CAAmB;AACvBW,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEX,KAAK,oBAAaA,KAAb,IAAuB;AAA7C,KADc;AAEvBY,IAAAA,GAAG,EAAER;AAFkB,GAAnB,CAH6B;AAOnC;AACAS,EAAAA,IAAI,EAAE,mBAR6B;AASnCC,EAAAA,OAAO,EAAE,OAT0B;AAUnCC,EAAAA,kBAAkB,EAAE,KAVe;AAWnCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,mBADH;AAEVC,MAAAA,WAAW,EAAE;AAFH,KADE;AAKdC,IAAAA,KAAK,EAAE;AACLF,MAAAA,WAAW,EAAE,cADR;AAELC,MAAAA,WAAW,EAAE;AAFR,KALO;AASdE,IAAAA,MAAM,EAAE;AACNF,MAAAA,WAAW,EAAE;AADP;AATM;AAXmB,CAAjB,CAAf","sourcesContent":["import ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink, createHttpLink } from \"apollo-link-http\";\n\nconst token = localStorage.getItem('token');\n\nconst cache = new InMemoryCache();\nconst url = process.env.REACT_APP_SERVER_URL || \"https://api.lapadi.com\";\nexport const client = new ApolloClient({\n    // Provide required constructor fields\n    cache,\n    link: new createHttpLink({\n      headers: { authorization: token ? `Bearer ${token}` : \"\"},\n      uri: url,\n    }),\n    // Provide some optional constructor fields\n    name: \"lapadi-app-client\",\n    version: \"1.0.1\",\n    queryDeduplication: false,\n    defaultOptions: {\n      watchQuery: {\n        fetchPolicy: 'cache-and-network',\n        errorPolicy: 'ignore',\n      },\n      query: {\n        fetchPolicy: 'network-only',\n        errorPolicy: 'all',\n      },\n      mutate: {\n        errorPolicy: 'all',\n      },\n    },\n});"]},"metadata":{},"sourceType":"module"}