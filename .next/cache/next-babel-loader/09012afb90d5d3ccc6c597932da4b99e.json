{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useRef, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Carousel from 'react-slick';\nimport IconButton from '@material-ui/core/IconButton';\nimport clsx from 'clsx';\nimport imgAPI from '~/public/images/imgAPI';\nimport { withTranslation } from '~/i18n';\nimport DotParallax from '../Parallax/Dots';\nimport Title from '../Title';\nimport GeneralCard from '../Cards/General';\nimport useStyle from './project-style';\nconst projectData = [{\n  img: imgAPI.architect[1],\n  title: 'Vivamus sit amet',\n  desc: 'Ut sed eros finibus, placerat orci id, dapibus mauris. Vestibulum consequat…'\n}, {\n  img: imgAPI.architect[2],\n  title: 'Vivamus sit amet',\n  desc: 'Ut sed eros finibus, placerat orci id, dapibus mauris. Vestibulum consequat…'\n}, {\n  img: imgAPI.architect[3],\n  title: 'Vivamus sit amet',\n  desc: 'Ut sed eros finibus, placerat orci id, dapibus mauris. Vestibulum consequat…'\n}, {\n  img: imgAPI.architect[1],\n  title: 'Vivamus sit amet',\n  desc: 'Ut sed eros finibus, placerat orci id, dapibus mauris. Vestibulum consequat…'\n}, {\n  img: imgAPI.architect[2],\n  title: 'Vivamus sit amet',\n  desc: 'Ut sed eros finibus, placerat orci id, dapibus mauris. Vestibulum consequat…'\n}, {\n  img: imgAPI.architect[3],\n  title: 'Vivamus sit amet',\n  desc: 'Ut sed eros finibus, placerat orci id, dapibus mauris. Vestibulum consequat…'\n}];\n\nfunction Project(props) {\n  const slider = useRef(null);\n  const {\n    t\n  } = props;\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  const classes = useStyle();\n  const settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    autoplay: false,\n    slidesToShow: 4,\n    arrows: false,\n    variableWidth: true,\n    responsive: [{\n      breakpoint: 1100,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 800,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  useEffect(() => {\n    if (theme.direction === 'rtl') {\n      const lastSlide = Math.floor(projectData.length - 2);\n      slider.current.slickGoTo(lastSlide);\n    }\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.parallaxWrap\n  }, __jsx(DotParallax, null)), __jsx(Container, null, __jsx(\"div\", {\n    className: classes.floatingTitle\n  }, __jsx(Title, {\n    head: t('common:architect-landing.project_title'),\n    desc: t('common:architect-landing.project_desc')\n  }))), __jsx(\"div\", {\n    className: classes.sliderWrap\n  }, __jsx(\"div\", {\n    className: classes.carousel\n  }, __jsx(Carousel, _extends({\n    ref: slider\n  }, settings), isDesktop && __jsx(\"div\", {\n    className: clsx(classes.props, classes.itemPropsFirst)\n  }, __jsx(\"div\", null)), projectData.map((item, index) => __jsx(\"div\", {\n    key: index.toString(),\n    className: classes.item\n  }, __jsx(GeneralCard, {\n    img: item.img,\n    title: item.title,\n    desc: item.desc\n  }))), isDesktop && __jsx(\"div\", {\n    className: clsx(classes.props, classes.itemPropsLast)\n  }, __jsx(\"div\", null)))), __jsx(IconButton, {\n    className: clsx(classes.nav, classes.prev),\n    onClick: () => slider.current.slickPrev()\n  }, __jsx(\"i\", {\n    className: \"ion-ios-arrow-left\"\n  })), __jsx(IconButton, {\n    className: clsx(classes.nav, classes.next),\n    onClick: () => slider.current.slickNext()\n  }, __jsx(\"i\", {\n    className: \"ion-ios-arrow-forward\"\n  }))));\n}\n\nexport default withTranslation(['architect-landing'])(Project);","map":null,"metadata":{},"sourceType":"module"}