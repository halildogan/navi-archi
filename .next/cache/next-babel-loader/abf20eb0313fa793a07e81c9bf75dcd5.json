{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Link from 'next/link';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Scrollspy from 'react-scrollspy';\nimport Settings from './Settings';\nimport MobileMenu from './MobileMenu';\nimport useStyles from './header-style';\nimport navMenu from './menu';\nimport { withTranslation } from '../../i18n';\nimport routeLink from '../../public/text/link';\nimport logo from '../../public/images/navi-archi-logo.svg';\nimport brand from '../../public/text/brand';\nimport '../../vendors/hamburger-menu.css';\nlet counter = 0;\n\nfunction createData(name, url, offset) {\n  counter += 1;\n  return {\n    id: counter,\n    name,\n    url,\n    offset\n  };\n}\n\nconst LinkBtn = React.forwardRef(function LinkBtn(props, ref) {\n  // eslint-disable-line\n  return __jsx(AnchorLink, _extends({\n    to: props.to\n  }, props, {\n    innerRef: ref\n  })); // eslint-disable-line\n});\n\nfunction Header(props) {\n  const {\n    0: fixed,\n    1: setFixed\n  } = useState(false);\n  let flagFixed = false;\n\n  const handleScroll = () => {\n    const doc = document.documentElement;\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const newFlagFixed = scroll > 100;\n\n    if (flagFixed !== newFlagFixed) {\n      setFixed(newFlagFixed);\n      flagFixed = newFlagFixed;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    onToggleDark,\n    onToggleDir,\n    invert,\n    t\n  } = props;\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  const isTablet = useMediaQuery(theme.breakpoints.down('md'));\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const {\n    0: menuList\n  } = useState([createData(navMenu[0], '#' + navMenu[0]), createData(navMenu[1], '#' + navMenu[1]), createData(navMenu[2], '#' + navMenu[2]), createData(navMenu[3], '#' + navMenu[3])]);\n  const {\n    0: openDrawer,\n    1: setOpenDrawer\n  } = useState(false);\n\n  const handleOpenDrawer = () => {\n    setOpenDrawer(!openDrawer);\n  };\n\n  return __jsx(Fragment, null, isMobile && __jsx(MobileMenu, {\n    open: openDrawer,\n    toggleDrawer: handleOpenDrawer\n  }), __jsx(AppBar, {\n    component: \"div\",\n    position: \"relative\",\n    id: \"header\",\n    className: clsx(classes.header, fixed && classes.fixed, invert && classes.invert, openDrawer && classes.openDrawer)\n  }, __jsx(Container, {\n    fixed: !isMobile\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    sm: 2,\n    xs: 7\n  }, __jsx(\"div\", {\n    className: classes.logo\n  }, isMobile && __jsx(IconButton, {\n    onClick: handleOpenDrawer,\n    className: clsx('hamburger hamburger--spring', classes.mobileMenu, openDrawer && 'is-active')\n  }, __jsx(\"span\", {\n    className: \"hamburger-box\"\n  }, __jsx(\"span\", {\n    className: clsx(classes.bar, 'hamburger-inner')\n  }))), invert ? __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: logo,\n    alt: \"logo\"\n  }), isDesktop && brand.architect.projectName)) : __jsx(AnchorLink, {\n    href: \"#home\"\n  }, __jsx(\"img\", {\n    src: logo,\n    alt: \"logo\"\n  }), isDesktop && brand.architect.projectName))), __jsx(Grid, {\n    item: true,\n    sm: isTablet ? 10 : 9,\n    xs: 5\n  }, __jsx(\"div\", {\n    className: classes.headerContent\n  }, __jsx(\"nav\", {\n    className: clsx(classes.navMenu, invert && classes.invert)\n  }, isDesktop && __jsx(Scrollspy, {\n    items: navMenu,\n    currentClassName: \"active\"\n  }, menuList.map(item => __jsx(\"li\", {\n    key: item.id.toString()\n  }, invert ? // eslint-disable-next-line\n  __jsx(Button, {\n    offset: item.offset || 0,\n    href: '/' + item.url\n  }, t('common:architect-landing.header_' + item.name)) : // eslint-disable-next-line\n  __jsx(Button, {\n    component: AnchorLink,\n    offset: item.offset || 0,\n    href: item.url\n  }, t('common:architect-landing.header_' + item.name)))), __jsx(\"li\", null, __jsx(Button, {\n    href: routeLink.architect.contact\n  }, t('common:architect-landing.header_contact'))))), __jsx(\"nav\", {\n    className: classes.navMenu\n  }, __jsx(Settings, {\n    toggleDark: onToggleDark,\n    toggleDir: onToggleDir,\n    invert: invert\n  }))))))));\n}\n\nHeader.propTypes = {\n  onToggleDark: PropTypes.func.isRequired,\n  onToggleDir: PropTypes.func.isRequired,\n  invert: PropTypes.bool,\n  t: PropTypes.func.isRequired\n};\nHeader.defaultProps = {\n  sticky: false,\n  invert: false\n};\nexport default withTranslation(['architect-landing'])(Header);","map":{"version":3,"sources":["/Users/halildogan/Desktop/hd-dev.nosync/zer/zer.archi/components/Header/Header.js"],"names":["React","useState","useEffect","Fragment","PropTypes","AppBar","Grid","clsx","Button","Link","IconButton","Container","useMediaQuery","useTheme","AnchorLink","Scrollspy","Settings","MobileMenu","useStyles","navMenu","withTranslation","routeLink","logo","brand","counter","createData","name","url","offset","id","LinkBtn","forwardRef","props","ref","to","Header","fixed","setFixed","flagFixed","handleScroll","doc","document","documentElement","scroll","window","pageYOffset","scrollTop","clientTop","newFlagFixed","addEventListener","classes","theme","onToggleDark","onToggleDir","invert","t","isDesktop","breakpoints","up","isTablet","down","isMobile","menuList","openDrawer","setOpenDrawer","handleOpenDrawer","header","mobileMenu","bar","architect","projectName","headerContent","map","item","toString","contact","propTypes","func","isRequired","bool","defaultProps","sticky"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Link from 'next/link';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Scrollspy from 'react-scrollspy';\nimport Settings from './Settings';\nimport MobileMenu from './MobileMenu';\nimport useStyles from './header-style';\nimport navMenu from './menu';\nimport { withTranslation } from '../../i18n';\nimport routeLink from '../../public/text/link';\nimport logo from '../../public/images/navi-archi-logo.svg';\nimport brand from '../../public/text/brand';\nimport '../../vendors/hamburger-menu.css';\n\nlet counter = 0;\nfunction createData(name, url, offset) {\n  counter += 1;\n  return {\n    id: counter,\n    name,\n    url,\n    offset,\n  };\n}\n\nconst LinkBtn = React.forwardRef(function LinkBtn(props, ref) { // eslint-disable-line\n  return <AnchorLink to={props.to} {...props} innerRef={ref} />; // eslint-disable-line\n});\n\nfunction Header(props) {\n  const [fixed, setFixed] = useState(false);\n  let flagFixed = false;\n  const handleScroll = () => {\n    const doc = document.documentElement;\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const newFlagFixed = (scroll > 100);\n    if (flagFixed !== newFlagFixed) {\n      setFixed(newFlagFixed);\n      flagFixed = newFlagFixed;\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    onToggleDark,\n    onToggleDir,\n    invert,\n    t\n  } = props;\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  const isTablet = useMediaQuery(theme.breakpoints.down('md'));\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const [menuList] = useState([\n    createData(navMenu[0], '#' + navMenu[0]),\n    createData(navMenu[1], '#' + navMenu[1]),\n    createData(navMenu[2], '#' + navMenu[2]),\n    createData(navMenu[3], '#' + navMenu[3]),\n  ]);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const handleOpenDrawer = () => {\n    setOpenDrawer(!openDrawer);\n  };\n  return (\n    <Fragment>\n      { isMobile && (<MobileMenu open={openDrawer} toggleDrawer={handleOpenDrawer} />) }\n      <AppBar\n        component=\"div\"\n        position=\"relative\"\n        id=\"header\"\n        className={clsx(\n          classes.header,\n          fixed && classes.fixed,\n          invert && classes.invert,\n          openDrawer && classes.openDrawer\n        )}\n      >\n        <Container fixed={!isMobile}>\n          <Grid container>\n            <Grid item sm={2} xs={7}>\n              <div className={classes.logo}>\n                { isMobile && (\n                  <IconButton\n                    onClick={handleOpenDrawer}\n                    className={clsx('hamburger hamburger--spring', classes.mobileMenu, openDrawer && 'is-active')}\n                  >\n                    <span className=\"hamburger-box\">\n                      <span className={clsx(classes.bar, 'hamburger-inner')} />\n                    </span>\n                  </IconButton>\n                )}\n                {invert ? (\n                  <Link href=\"/\">\n                    <a>\n                      <img src={logo} alt=\"logo\" />\n                      {isDesktop && brand.architect.projectName}\n                    </a>\n                  </Link>\n                ) : (\n                  <AnchorLink href=\"#home\">\n                    <img src={logo} alt=\"logo\" />\n                    {isDesktop && brand.architect.projectName}\n                  </AnchorLink>\n                )}\n              </div>\n            </Grid>\n            <Grid item sm={isTablet ? 10 : 9} xs={5}>\n              <div className={classes.headerContent}>\n                <nav className={clsx(classes.navMenu, invert && classes.invert)}>\n                  {isDesktop && (\n                    <Scrollspy\n                      items={navMenu}\n                      currentClassName=\"active\"\n                    >\n                      {menuList.map(item => (\n                        <li key={item.id.toString()}>\n                          {invert ? (\n                            // eslint-disable-next-line\n                            <Button offset={item.offset || 0} href={'/' + item.url}>\n                              {t('common:architect-landing.header_' + item.name)}\n                            </Button>\n                          ) : (\n                            // eslint-disable-next-line\n                            <Button component={AnchorLink} offset={item.offset || 0} href={item.url}>\n                              {t('common:architect-landing.header_' + item.name)}\n                            </Button>\n                          )}\n                        </li>\n                      ))}\n                      <li>\n                        <Button href={routeLink.architect.contact}>\n                          {t('common:architect-landing.header_contact')}\n                        </Button>\n                      </li>\n                    </Scrollspy>\n                  )}\n                </nav>\n                <nav className={classes.navMenu}>\n                  <Settings toggleDark={onToggleDark} toggleDir={onToggleDir} invert={invert} />\n                </nav>\n              </div>\n            </Grid>\n          </Grid>\n        </Container>\n      </AppBar>\n    </Fragment>\n  );\n}\n\nHeader.propTypes = {\n  onToggleDark: PropTypes.func.isRequired,\n  onToggleDir: PropTypes.func.isRequired,\n  invert: PropTypes.bool,\n  t: PropTypes.func.isRequired\n};\n\nHeader.defaultProps = {\n  sticky: false,\n  invert: false\n};\n\nexport default withTranslation(['architect-landing'])(Header);\n"]},"metadata":{},"sourceType":"module"}