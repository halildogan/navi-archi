{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport SendIcon from '@material-ui/icons/Send';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PhoneIcon from '@material-ui/icons/LocalPhone';\nimport LocationIcon from '@material-ui/icons/LocationOn';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\nimport { useText } from '~/theme/common';\nimport brand from '~/public/text/brand';\nimport logo from '~/public/images/architect-logo.svg';\nimport routeLink from '~/public/text/link';\nimport { withTranslation } from '~/i18n';\nimport useStyles from './form-style';\nimport CrossParallax from '../Parallax/Cross';\nimport Title from '../Title';\n\nfunction BubleMark() {\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.bubelWrap\n  }, __jsx(\"div\", {\n    className: classes.buble\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true\n  }, \"Head Quarter\"), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    sm: 6,\n    xs: 12\n  }, __jsx(Typography, null, __jsx(PhoneIcon, {\n    className: classes.icon\n  }), \"+98 765 432 10\")), __jsx(Grid, {\n    item: true,\n    sm: 6,\n    xs: 12\n  }, __jsx(Typography, null, __jsx(EmailIcon, {\n    className: classes.icon\n  }), \"hello@luxi.com\")), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, null, __jsx(LocationIcon, {\n    className: classes.icon\n  }), \"Lorem ipsum street Block C - Vestibullum Building\")))));\n}\n\nfunction MapContainer(props) {\n  var _useState = useState({}),\n      activeMarker = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(false),\n      showingInfoWindow = _useState2[0],\n      setShow = _useState2[1];\n\n  var google = props.google;\n\n  var onMarkerClick = function onMarkerClick(marker) {\n    setActive(marker);\n    setShow(true);\n  };\n\n  var onMapClicked = function onMapClicked() {\n    if (showingInfoWindow) {\n      setShow(false);\n      setActive(null);\n    }\n  };\n\n  return __jsx(Map, {\n    google: google,\n    onClick: onMapClicked,\n    style: {\n      width: '100%',\n      height: '700px',\n      position: 'relative'\n    },\n    initialCenter: {\n      lat: 37.759703,\n      lng: -122.428093\n    },\n    zoom: 14\n  }, __jsx(Marker, {\n    onClick: onMarkerClick,\n    position: {\n      lat: 37.759703,\n      lng: -122.428093\n    }\n  }), __jsx(InfoWindow, {\n    marker: activeMarker,\n    visible: showingInfoWindow\n  }, __jsx(\"div\", null, __jsx(BubleMark, null))));\n}\n\nvar MapWithAMarker = GoogleApiWrapper({\n  apiKey: null\n})(MapContainer);\n\nfunction Contact(props) {\n  var classes = useStyles();\n  var text = useText();\n  var t = props.t;\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var _useState3 = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: ''\n  }),\n      values = _useState3[0],\n      setValues = _useState3[1];\n\n  var _useState4 = useState(false),\n      openNotif = _useState4[0],\n      setNotif = _useState4[1];\n\n  var _useState5 = useState(false),\n      check = _useState5[0],\n      setCheck = _useState5[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var handleCheck = function handleCheck(event) {\n    setCheck(event.target.checked);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    setNotif(true);\n  };\n\n  var handleClose = function handleClose() {\n    setNotif(false);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.pageWrap\n  }, __jsx(Hidden, {\n    mdDown: true\n  }, __jsx(\"div\", {\n    className: classes.bgDeco\n  })), __jsx(\"div\", {\n    className: classes.parallax\n  }, __jsx(CrossParallax, null)), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    key: \"top right\",\n    open: openNotif,\n    autoHideDuration: 4000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: __jsx(\"span\", {\n      id: \"message-id\"\n    }, \"Message Sent\")\n  }), __jsx(Hidden, {\n    mdUp: true\n  }, __jsx(\"div\", {\n    className: clsx(classes.logo, classes.logoHeader)\n  }, __jsx(\"a\", {\n    href: routeLink.architect.home\n  }, __jsx(\"img\", {\n    src: logo,\n    alt: \"logo\"\n  }), __jsx(Typography, {\n    component: \"span\"\n  }, brand.architect.projectName)))), __jsx(Container, {\n    maxWidth: \"lg\",\n    className: classes.innerWrap\n  }, __jsx(IconButton, {\n    href: routeLink.architect.home,\n    className: classes.backtohome\n  }, __jsx(\"i\", {\n    className: \"ion-ios-home-outline\"\n  }), __jsx(\"i\", {\n    className: \"ion-ios-arrow-thin-left\"\n  })), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    lg: 1,\n    xs: 12\n  }), __jsx(Grid, {\n    item: true,\n    lg: 5,\n    xs: 12,\n    className: classes.wrapDeco\n  }, __jsx(Hidden, {\n    mdDown: true\n  }, __jsx(\"div\", {\n    className: classes.frmDeco\n  })), __jsx(Paper, {\n    className: clsx(classes.formBox, 'fragment-fadeUp')\n  }, __jsx(\"div\", {\n    className: classes.fullFromWrap\n  }, __jsx(\"div\", {\n    className: classes.form\n  }, __jsx(Title, {\n    head: \"Contact Us\",\n    desc: t('common:contact_subtitle')\n  }), __jsx(ValidatorForm, {\n    onSubmit: handleSubmit,\n    onError: function onError(errors) {\n      return console.log(errors);\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextValidator, {\n    className: classes.input,\n    label: t('common:form_name'),\n    onChange: handleChange('name'),\n    name: \"Name\",\n    value: values.name,\n    validators: ['required'],\n    errorMessages: ['this field is required']\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextValidator, {\n    className: classes.input,\n    label: t('common:form_email'),\n    onChange: handleChange('email'),\n    name: \"Email\",\n    value: values.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['this field is required', 'email is not valid']\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextValidator, {\n    className: classes.input,\n    label: t('common:form_phone'),\n    onChange: handleChange('phone'),\n    name: \"Phone\",\n    value: values.phone\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextValidator, {\n    multiline: true,\n    rows: \"6\",\n    className: classes.input,\n    label: t('common:form_message'),\n    onChange: handleChange('message'),\n    name: \"Message\",\n    value: values.message\n  }))), __jsx(FormControlLabel, {\n    className: classes.checkArea,\n    control: __jsx(Checkbox, {\n      checked: check,\n      onChange: function onChange(e) {\n        return handleCheck(e);\n      },\n      color: \"primary\",\n      value: \"check\"\n    }),\n    label: __jsx(\"span\", {\n      className: text.paragraph\n    }, t('common:form_terms'), __jsx(\"br\", null), __jsx(\"a\", {\n      href: \"#\"\n    }, t('common:form_privacy')))\n  }), __jsx(\"div\", {\n    className: classes.btnArea\n  }, __jsx(Button, {\n    variant: \"contained\",\n    fullWidth: isMobile,\n    type: \"submit\",\n    color: \"primary\",\n    size: \"large\"\n  }, t('common:form_send'), __jsx(SendIcon, {\n    className: classes.rightIcon\n  })))))))), __jsx(Grid, {\n    item: true,\n    lg: 6,\n    xs: 12\n  }, __jsx(Hidden, {\n    mdDown: true\n  }, __jsx(Paper, {\n    className: classes.map,\n    elevation: 10\n  }, __jsx(MapWithAMarker, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: __jsx(\"div\", {\n      style: {\n        height: '100%'\n      }\n    }),\n    containerElement: __jsx(\"div\", {\n      style: {\n        height: '700px'\n      }\n    }),\n    mapElement: __jsx(\"div\", {\n      style: {\n        height: '100%'\n      }\n    })\n  })))))));\n}\n\nexport default withTranslation(['common'])(Contact);","map":null,"metadata":{},"sourceType":"module"}