{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport Drawer from '@material-ui/core/Drawer';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { useText } from '../../theme/common';\nimport useStyles from './cards-style';\nimport ProjectCard from './Project';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `action-tabpanel-${index}`,\n    \"aria-labelledby\": `action-tab-${index}`\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, children));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    'aria-controls': `action-tabpanel-${index}`\n  };\n}\n\nexport default function General(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const text = useText();\n  const {\n    img,\n    title,\n    desc\n  } = props;\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n  const [value, setValue] = React.useState(0);\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [anchor]: open\n    }));\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  const renderContext = () => {\n    return __jsx(\"div\", {\n      style: {\n        width: \"600px\",\n        overflow: \"hidden\"\n      }\n    }, __jsx(\"header\", null, __jsx(\"div\", {\n      className: \"MuiTabs-root jss841\"\n    }, __jsx(\"div\", {\n      className: \"MuiTabs-scroller MuiTabs-fixed\",\n      style: {\n        overflow: \"hidden\"\n      }\n    }, __jsx(Tabs, {\n      value: value,\n      onChange: handleChange,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"fullWidth\",\n      \"aria-label\": \"action tabs example\"\n    }, __jsx(Tab, _extends({\n      label: \"Detail\"\n    }, a11yProps(0))), __jsx(Tab, _extends({\n      label: \"Information\"\n    }, a11yProps(1))))))), __jsx(SwipeableViews, {\n      axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n      index: value,\n      onChangeIndex: handleChangeIndex\n    }, __jsx(TabPanel, {\n      value: value,\n      index: 0,\n      dir: theme.direction\n    }, __jsx(ProjectCard, null)), __jsx(TabPanel, {\n      value: value,\n      index: 1,\n      dir: theme.direction\n    }, \"Item Two\")));\n  };\n\n  return __jsx(Paper, {\n    className: classes.generalCard\n  }, __jsx(\"figure\", null, __jsx(\"img\", {\n    src: img,\n    alt: title\n  })), __jsx(Paper, {\n    className: classes.desc\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true\n  }, title), __jsx(Typography, {\n    className: text.paragraph\n  }, desc), __jsx(Button, {\n    onClick: toggleDrawer(\"right\", true),\n    className: classes.button,\n    color: \"secondary\",\n    size: \"small\",\n    variant: \"contained\"\n  }, \"See Detail\")), __jsx(\"div\", {\n    style: {\n      background: 'rgba(255, 255, 255, 0.6)',\n      backdropFilter: 'saturate(180%) blur(20px)'\n    }\n  }, __jsx(Drawer, {\n    anchor: \"right\",\n    open: state[\"right\"],\n    onClose: toggleDrawer(\"right\", false)\n  }, renderContext())));\n}","map":null,"metadata":{},"sourceType":"module"}