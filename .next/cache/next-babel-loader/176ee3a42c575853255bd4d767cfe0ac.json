{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport { Parallax } from 'react-parallax';\nimport imgAPI from '../../public/images/imgAPI';\nimport { useText } from '../../theme/common';\nimport { withTranslation } from '../../i18n';\nimport useStyles from './subscribe-style';\nimport SubscriptionController from \"../../controller/support/SubscriptionController\";\n\nfunction SubscribeForm(props) {\n  _s();\n\n  var classes = useStyles();\n  var text = useText();\n  var t = props.t;\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Parallax, {\n    blur: 0,\n    bgImage: imgAPI.architect[15],\n    bgImageAlt: \"benefit\",\n    strength: 300\n  }, __jsx(\"div\", {\n    className: classes.parallaxWrap\n  })), __jsx(Container, {\n    fixed: true\n  }, __jsx(Paper, {\n    className: classes.form\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    className: text.title2\n  }, t('common:architect-landing.subscribe_title')), __jsx(Typography, {\n    className: text.subtitle2\n  }, t('common:architect-landing.subscribe_subtitle')))));\n}\n\n_s(SubscribeForm, \"sIri302/737AzjdcwNVkE90W8ww=\", false, function () {\n  return [useStyles, useText];\n});\n\n_c = SubscribeForm;\nSubscribeForm.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['architect-landing'])(SubscribeForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscribeForm\");","map":{"version":3,"sources":["/Users/halildogan/Desktop/hd-dev.nosync/zer/zer.archi/components/SubscribeForm/SubscribeForm.js"],"names":["React","useState","PropTypes","Button","Container","Typography","Paper","TextField","Parallax","imgAPI","useText","withTranslation","useStyles","SubscriptionController","SubscribeForm","props","classes","text","t","value","setValue","handleChange","event","target","root","architect","parallaxWrap","form","title2","subtitle2","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,OAAOC,sBAAP,MAAmC,iDAAnC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,MAAMK,IAAI,GAAGP,OAAO,EAApB;AAF4B,MAGpBQ,CAHoB,GAGdH,KAHc,CAGpBG,CAHoB;;AAAA,kBAIFjB,QAAQ,CAAC,EAAD,CAJN;AAAA,MAIrBkB,KAJqB;AAAA,MAIdC,QAJc;;AAM5B,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACQ;AAAxB,KACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,OAAO,EAAEf,MAAM,CAACgB,SAAP,CAAiB,EAAjB,CAFX;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,QAAQ,EAAE;AAJZ,KAME;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU;AAAxB,IANF,CADF,EASE,MAAC,SAAD;AAAW,IAAA,KAAK;AAAhB,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEV,OAAO,CAACW;AAA1B,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEV,IAAI,CAACW;AAAzC,KACGV,CAAC,CAAC,0CAAD,CADJ,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAED,IAAI,CAACY;AAA5B,KACGX,CAAC,CAAC,6CAAD,CADJ,CAJF,CADF,CATF,CADF;AAuBD;;GAjCQJ,a;UACSF,S,EACHF,O;;;KAFNI,a;AAmCTA,aAAa,CAACgB,SAAd,GAA0B;AACxBZ,EAAAA,CAAC,EAAEhB,SAAS,CAAC6B,IAAV,CAAeC;AADM,CAA1B;AAIA,eAAerB,eAAe,CAAC,CAAC,mBAAD,CAAD,CAAf,CAAuCG,aAAvC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport { Parallax } from 'react-parallax';\nimport imgAPI from '../../public/images/imgAPI';\nimport { useText } from '../../theme/common';\nimport { withTranslation } from '../../i18n';\nimport useStyles from './subscribe-style';\n\nimport SubscriptionController from \"../../controller/support/SubscriptionController\";\n\nfunction SubscribeForm(props) {\n  const classes = useStyles();\n  const text = useText();\n  const { t } = props;\n  const [value, setValue] = useState('');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Parallax\n        blur={0}\n        bgImage={imgAPI.architect[15]}\n        bgImageAlt=\"benefit\"\n        strength={300}\n      >\n        <div className={classes.parallaxWrap} />\n      </Parallax>\n      <Container fixed>\n        <Paper className={classes.form}>\n          <Typography variant=\"h4\" className={text.title2}>\n            {t('common:architect-landing.subscribe_title')}\n          </Typography>\n          <Typography className={text.subtitle2}>\n            {t('common:architect-landing.subscribe_subtitle')}\n          </Typography>\n         \n        </Paper>\n      </Container>\n    </div>\n  );\n}\n\nSubscribeForm.propTypes = {\n  t: PropTypes.func.isRequired\n};\n\nexport default withTranslation(['architect-landing'])(SubscribeForm);\n"]},"metadata":{},"sourceType":"module"}