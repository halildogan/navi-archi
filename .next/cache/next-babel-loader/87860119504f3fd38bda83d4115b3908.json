{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Drawer from '@material-ui/core/Drawer';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useText } from '../../theme/common';\nimport useStyles from './cards-style';\nexport default function General(props) {\n  const classes = useStyles();\n  const text = useText();\n  const {\n    img,\n    title,\n    desc\n  } = props;\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [anchor]: open\n    }));\n  };\n\n  const renderContext = () => {\n    return __jsx(\"div\", {\n      style: {\n        transform: 'none',\n        transition: 'transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms'\n      }\n    });\n  };\n\n  return __jsx(Paper, {\n    className: classes.generalCard\n  }, __jsx(\"figure\", null, __jsx(\"img\", {\n    src: img,\n    alt: title\n  })), __jsx(Paper, {\n    className: classes.desc\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true\n  }, title), __jsx(Typography, {\n    className: text.paragraph\n  }, desc), __jsx(Button, {\n    onClick: toggleDrawer(\"right\", true),\n    className: classes.button,\n    color: \"secondary\",\n    size: \"small\",\n    variant: \"contained\"\n  }, \"See Detail\")), __jsx(Drawer, {\n    anchor: \"right\",\n    open: state[\"right\"],\n    onClose: toggleDrawer(\"right\", false)\n  }, renderContext()));\n}\nGeneral.propTypes = {\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/halildogan/Desktop/hd-dev.nosync/zer/zer.archi/components/Cards/General.js"],"names":["React","PropTypes","Drawer","Paper","Button","Typography","useText","useStyles","General","props","classes","text","img","title","desc","state","setState","useState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","renderContext","transform","transition","generalCard","paragraph","button","propTypes","string","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAMI,IAAI,GAAGL,OAAO,EAApB;AACA,QAAM;AACJM,IAAAA,GADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA;AAHI,MAIFL,KAJJ;AAMA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACiB,QAAN,CAAe;AACvCC,IAAAA,GAAG,EAAE,KADkC;AAEvCC,IAAAA,IAAI,EAAE,KAFiC;AAGvCC,IAAAA,MAAM,EAAE,KAH+B;AAIvCC,IAAAA,KAAK,EAAE;AAJgC,GAAf,CAA1B;;AAOA,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,KAAmBC,KAAD,IAAW;AAChD,QAAIA,KAAK,CAACC,IAAN,KAAe,SAAf,KAA6BD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OAAlE,CAAJ,EAAgF;AAC9E;AACD;;AAEDX,IAAAA,QAAQ,iCAAMD,KAAN;AAAa,OAACQ,MAAD,GAAUC;AAAvB,OAAR;AACD,GAND;;AAQA,QAAMI,aAAa,GAAG,MAAM;AAC1B,WACE;AAAK,MAAA,KAAK,EAAE;AACVC,QAAAA,SAAS,EAAE,MADD;AAEVC,QAAAA,UAAU,EAAE;AAFF;AAAZ,MADF;AAQD,GATD;;AAWA,SACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEpB,OAAO,CAACqB;AAA1B,KACE,sBACE;AAAK,IAAA,GAAG,EAAEnB,GAAV;AAAe,IAAA,GAAG,EAAEC;AAApB,IADF,CADF,EAIE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEH,OAAO,CAACI;AAA1B,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY;AAArC,KAAuCD,KAAvC,CADF,EAEE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,IAAI,CAACqB;AAA5B,KACGlB,IADH,CAFF,EAKE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEQ,YAAY,CAAC,OAAD,EAAU,IAAV,CAA7B;AAA8C,IAAA,SAAS,EAAEZ,OAAO,CAACuB,MAAjE;AAAyE,IAAA,KAAK,EAAC,WAA/E;AAA2F,IAAA,IAAI,EAAC,OAAhG;AAAwG,IAAA,OAAO,EAAC;AAAhH,kBALF,CAJF,EAaE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,OAAhB;AAAyB,IAAA,IAAI,EAAElB,KAAK,CAAC,OAAD,CAApC;AAA+C,IAAA,OAAO,EAAEO,YAAY,CAAC,OAAD,EAAU,KAAV;AAApE,KAEGM,aAAa,EAFhB,CAbF,CADF;AAqBD;AAEDpB,OAAO,CAAC0B,SAAR,GAAoB;AAClBtB,EAAAA,GAAG,EAAEX,SAAS,CAACkC,MAAV,CAAiBC,UADJ;AAElBvB,EAAAA,KAAK,EAAEZ,SAAS,CAACkC,MAAV,CAAiBC,UAFN;AAGlBtB,EAAAA,IAAI,EAAEb,SAAS,CAACkC,MAAV,CAAiBC;AAHL,CAApB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Drawer from '@material-ui/core/Drawer';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useText } from '../../theme/common';\nimport useStyles from './cards-style';\n\nexport default function General(props) {\n  const classes = useStyles();\n  const text = useText();\n  const {\n    img,\n    title,\n    desc\n  } = props;\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  \n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const renderContext = () => {\n    return (\n      <div style={{\n        transform: 'none',\n        transition: 'transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms'\n      }}>\n        \n      </div>\n    )\n  }\n\n  return (\n    <Paper className={classes.generalCard}>\n      <figure>\n        <img src={img} alt={title} />\n      </figure>\n      <Paper className={classes.desc}>\n        <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n        <Typography className={text.paragraph}>\n          {desc}\n        </Typography>\n        <Button onClick={toggleDrawer(\"right\", true)} className={classes.button} color=\"secondary\" size=\"small\" variant=\"contained\">\n          See Detail\n        </Button>\n      </Paper>\n      <Drawer anchor={\"right\"} open={state[\"right\"]} onClose={toggleDrawer(\"right\", false)}>\n       {\n         renderContext()\n       }\n      </Drawer>\n    </Paper>\n  );\n}\n\nGeneral.propTypes = {\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}