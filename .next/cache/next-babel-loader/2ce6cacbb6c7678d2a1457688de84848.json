{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Parallax } from 'react-parallax';\nimport imgAPI from '../../public/images/imgAPI';\nimport { useText } from '../../theme/common';\nimport { withTranslation } from '../../i18n';\nimport useStyles from './subscribe-style';\nimport SubscriptionController from \"../../controller/support/SubscriptionController\";\n\nfunction SubscribeForm(props) {\n  const classes = useStyles();\n  const text = useText();\n  const {\n    t\n  } = props;\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    0: openNotif,\n    1: setNotif\n  } = useState(false);\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  const handleClose = () => {\n    setNotif(false);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Parallax, {\n    blur: 0,\n    bgImage: imgAPI.architect[15],\n    bgImageAlt: \"benefit\",\n    strength: 300\n  }, __jsx(\"div\", {\n    className: classes.parallaxWrap\n  })), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    key: \"top right\",\n    open: openNotif,\n    autoHideDuration: 4000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: __jsx(\"span\", {\n      id: \"message-id\"\n    }, \"Thank you! You subscribed.\")\n  }), __jsx(Container, {\n    fixed: true\n  }, __jsx(Paper, {\n    className: classes.form\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    className: text.title2\n  }, t('common:architect-landing.subscribe_title')), __jsx(Typography, {\n    className: text.subtitle2\n  }, t('common:architect-landing.subscribe_subtitle')), __jsx(SubscriptionController, null, data => {\n    const {\n      createSupport,\n      loading\n    } = data;\n    return __jsx(\"form\", null, __jsx(TextField, {\n      className: classes.field,\n      fullWidth: true,\n      label: t('common:architect-landing.subscribe_input'),\n      placeholder: t('common:architect-landing.subscribe_input'),\n      onChange: e => handleChange(e),\n      value: value\n    }), __jsx(Button, {\n      onClick: () => {\n        createSupport({\n          variables: {\n            input: {\n              email: value,\n              appId: \"3e005e83-7aea-4ca0-8c03-d3d3daaf8227\"\n            }\n          }\n        }).then(res => {\n          setNotif(true);\n          setValue(\"\");\n        }).catch(error => console.log(error));\n      },\n      disabled: !value,\n      variant: \"contained\",\n      size: \"large\",\n      color: \"secondary\",\n      className: classes.button\n    }, t('common:architect-landing.subscribe_subscribe')));\n  }))));\n}\n\nexport default withTranslation(['architect-landing'])(SubscribeForm);","map":null,"metadata":{},"sourceType":"module"}