{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport { Parallax } from 'react-parallax';\nimport imgAPI from '../../public/images/imgAPI';\nimport { useText } from '../../theme/common';\nimport { withTranslation } from '../../i18n';\nimport useStyles from './subscribe-style';\n\nfunction SubscribeForm(props) {\n  const classes = useStyles();\n  const text = useText();\n  const {\n    t\n  } = props;\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Parallax, {\n    blur: 0,\n    bgImage: imgAPI.architect[15],\n    bgImageAlt: \"benefit\",\n    strength: 300\n  }, __jsx(\"div\", {\n    className: classes.parallaxWrap\n  })), __jsx(Container, {\n    fixed: true\n  }, __jsx(Paper, {\n    className: classes.form\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    className: text.title2\n  }, t('common:architect-landing.subscribe_title')), __jsx(Typography, {\n    className: text.subtitle2\n  }, t('common:architect-landing.subscribe_subtitle')), __jsx(\"form\", null, __jsx(TextField, {\n    className: classes.field,\n    fullWidth: true,\n    label: t('common:architect-landing.subscribe_input'),\n    placeholder: t('common:architect-landing.subscribe_input'),\n    onChange: e => handleChange(e),\n    value: value\n  }), __jsx(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"secondary\",\n    className: classes.button\n  }, t('common:architect-landing.subscribe_subscribe'))))));\n}\n\nSubscribeForm.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['architect-landing'])(SubscribeForm);","map":{"version":3,"sources":["/Users/halildogan/Desktop/hd-dev.nosync/zer/zer.archi/components/SubscribeForm/SubscribeForm.js"],"names":["React","useState","PropTypes","Button","Container","Typography","Paper","TextField","Parallax","imgAPI","useText","withTranslation","useStyles","SubscribeForm","props","classes","text","t","value","setValue","handleChange","event","target","root","architect","parallaxWrap","form","title2","subtitle2","field","e","button","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAMI,IAAI,GAAGN,OAAO,EAApB;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAQH,KAAd;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASmB,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACQ;AAAxB,KACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,OAAO,EAAEd,MAAM,CAACe,SAAP,CAAiB,EAAjB,CAFX;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,QAAQ,EAAE;AAJZ,KAME;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU;AAAxB,IANF,CADF,EASE,MAAC,SAAD;AAAW,IAAA,KAAK;AAAhB,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEV,OAAO,CAACW;AAA1B,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEV,IAAI,CAACW;AAAzC,KACGV,CAAC,CAAC,0CAAD,CADJ,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAED,IAAI,CAACY;AAA5B,KACGX,CAAC,CAAC,6CAAD,CADJ,CAJF,EAOE,oBACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAEF,OAAO,CAACc,KADrB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,KAAK,EAAEZ,CAAC,CAAC,0CAAD,CAHV;AAIE,IAAA,WAAW,EAAEA,CAAC,CAAC,0CAAD,CAJhB;AAKE,IAAA,QAAQ,EAAGa,CAAD,IAAOV,YAAY,CAACU,CAAD,CAL/B;AAME,IAAA,KAAK,EAAEZ;AANT,IADF,EASE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,OAAjC;AAAyC,IAAA,KAAK,EAAC,WAA/C;AAA2D,IAAA,SAAS,EAAEH,OAAO,CAACgB;AAA9E,KACGd,CAAC,CAAC,8CAAD,CADJ,CATF,CAPF,CADF,CATF,CADF;AAmCD;;AAEDJ,aAAa,CAACmB,SAAd,GAA0B;AACxBf,EAAAA,CAAC,EAAEf,SAAS,CAAC+B,IAAV,CAAeC;AADM,CAA1B;AAIA,eAAevB,eAAe,CAAC,CAAC,mBAAD,CAAD,CAAf,CAAuCE,aAAvC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport { Parallax } from 'react-parallax';\nimport imgAPI from '../../public/images/imgAPI';\nimport { useText } from '../../theme/common';\nimport { withTranslation } from '../../i18n';\nimport useStyles from './subscribe-style';\n\nfunction SubscribeForm(props) {\n  const classes = useStyles();\n  const text = useText();\n  const { t } = props;\n  const [value, setValue] = useState('');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Parallax\n        blur={0}\n        bgImage={imgAPI.architect[15]}\n        bgImageAlt=\"benefit\"\n        strength={300}\n      >\n        <div className={classes.parallaxWrap} />\n      </Parallax>\n      <Container fixed>\n        <Paper className={classes.form}>\n          <Typography variant=\"h4\" className={text.title2}>\n            {t('common:architect-landing.subscribe_title')}\n          </Typography>\n          <Typography className={text.subtitle2}>\n            {t('common:architect-landing.subscribe_subtitle')}\n          </Typography>\n          <form>\n            <TextField\n              className={classes.field}\n              fullWidth\n              label={t('common:architect-landing.subscribe_input')}\n              placeholder={t('common:architect-landing.subscribe_input')}\n              onChange={(e) => handleChange(e)}\n              value={value}\n            />\n            <Button variant=\"contained\" size=\"large\" color=\"secondary\" className={classes.button}>\n              {t('common:architect-landing.subscribe_subscribe')}\n            </Button>\n          </form>\n        </Paper>\n      </Container>\n    </div>\n  );\n}\n\nSubscribeForm.propTypes = {\n  t: PropTypes.func.isRequired\n};\n\nexport default withTranslation(['architect-landing'])(SubscribeForm);\n"]},"metadata":{},"sourceType":"module"}